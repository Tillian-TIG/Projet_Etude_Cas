/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.raven.form;



import com.mycompany.hopital.Main_Secretaire;
import com.raven.datechooser.EventDateChooser;
import com.raven.datechooser.SelectedAction;
import com.raven.datechooser.SelectedDate;
import com.raven.model.Model_Card;
import icon.tableaction;
import icon.tablecelleditor;
import icon.tablecellrender;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import table.TableCustom;

/**
 *
 * @author Trafiquant de Tigb√©
 */
public class Form_dash_admin extends javax.swing.JPanel {
 private static final String username = "root";
 private static final String password = "primatologue";
 private static final String dataConn = "jdbc:mysql://localhost:3306/hopital";
 
 Connection sqlConn = null;
 Connection sqlSearch = null;
 PreparedStatement pst = null;
 PreparedStatement pst_search = null;
 ResultSet rs = null;
 ResultSet rs_2 = null;
 PreparedStatement pst_tab = null;
 ResultSet rs_tab = null;
 int q, i , id, deleteItem;

    /**
     * Creates new form Jpanel_admin_Medecin
     */
    public Form_dash_admin() {
        initComponents();
        setOpaque(false);     
        TableCustom.apply(jScrollPanel_all, TableCustom.TableType.DEFAULT);
//        TableCustom.apply(jScrollPane2, TableCustom.TableType.DEFAULT);
//        TableCustom.apply(jScrollPane3, TableCustom.TableType.DEFAULT);
//        TableCustom.apply(jScrollPane4, TableCustom.TableType.DEFAULT);
//        TableCustom.apply(jScrollPane5, TableCustom.TableType.DEFAULT);
    //   tab_all_patient("Medecin",JTable);
       Form_Home_Caissier();
       
        
        
       // getContentPane().setBackground(new Color(240, 240, 240));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPaneCustom1 = new raven.tabbed.TabbedPaneCustom();
        all_patient = new com.raven.swing.PanelBorder();
        jScrollPanel_all = new javax.swing.JScrollPane();
        JTable = new javax.swing.JTable();
        textsearch1 = new textfield.textsearch();
        card1 = new com.raven.component.Card();
        card2 = new com.raven.component.Card();
        card3 = new com.raven.component.Card();
        card4 = new com.raven.component.Card();

        setBackground(new java.awt.Color(38, 120, 113));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        tabbedPaneCustom1.setBackground(new java.awt.Color(38, 120, 113));
        tabbedPaneCustom1.setForeground(new java.awt.Color(255, 255, 255));
        tabbedPaneCustom1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabbedPaneCustom1MouseClicked(evt);
            }
        });
        tabbedPaneCustom1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabbedPaneCustom1KeyPressed(evt);
            }
        });

        JTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom", "Prenom", "Contact", "Role", "Service", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JTable.setRowHeight(40);
        JTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTableMouseClicked(evt);
            }
        });
        jScrollPanel_all.setViewportView(JTable);

        javax.swing.GroupLayout all_patientLayout = new javax.swing.GroupLayout(all_patient);
        all_patient.setLayout(all_patientLayout);
        all_patientLayout.setHorizontalGroup(
            all_patientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(all_patientLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPanel_all, javax.swing.GroupLayout.DEFAULT_SIZE, 996, Short.MAX_VALUE)
                .addContainerGap())
        );
        all_patientLayout.setVerticalGroup(
            all_patientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, all_patientLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPanel_all, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPaneCustom1.addTab("Membres", all_patient);

        textsearch1.setText("Recherche");
        textsearch1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textsearch1MouseClicked(evt);
            }
        });
        textsearch1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textsearch1KeyReleased(evt);
            }
        });

        card1.setColor1(new java.awt.Color(38, 94, 73));
        card1.setColor2(new java.awt.Color(45, 138, 130));
        card1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                card1MouseClicked(evt);
            }
        });

        card2.setColor1(new java.awt.Color(38, 94, 73));
        card2.setColor2(new java.awt.Color(45, 138, 130));
        card2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                card2MouseClicked(evt);
            }
        });

        card3.setColor1(new java.awt.Color(38, 94, 73));
        card3.setColor2(new java.awt.Color(45, 138, 130));
        card3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                card3MouseClicked(evt);
            }
        });

        card4.setColor1(new java.awt.Color(38, 94, 73));
        card4.setColor2(new java.awt.Color(45, 138, 130));
        card4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                card4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabbedPaneCustom1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(textsearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(card1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(card2, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(card3, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(card4, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(textsearch1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(card2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                    .addComponent(card1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(card3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(card4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addComponent(tabbedPaneCustom1, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

     public void Form_Home_Caissier() {

       
       String med  = nbre_med();
       String sec  = nbre_sec();
       String inf  = nbre_inf();
       String cai  = nbre_cais();
       
       
       card1.setData(new Model_Card(new ImageIcon(getClass().getResource("/com/raven/icon/8.png")), "Nombre de docteur Medecin ","" + med));
        card2.setData(new Model_Card(new ImageIcon(getClass().getResource("/com/raven/icon/8.png")), "Nombre d'Assistant ou Infirmier ","" + inf));
         card3.setData(new Model_Card(new ImageIcon(getClass().getResource("/com/raven/icon/8.png")), "Nombre de Caissier ","" + cai));
          card4.setData(new Model_Card(new ImageIcon(getClass().getResource("/com/raven/icon/8.png")), "Nombre de Secretaire ","" + sec));
       // card3.setData(new Model_Card(new ImageIcon(getClass().getResource("/com/raven/icon/stock.png")), "Nombre de dossier medical ",nbre_dm));
    }
     
      public String nbre_med ()
    {
        String nbre_total = null;
     try {
            Class.forName("com.mysql.jdbc.Driver");
                 sqlConn = DriverManager.getConnection(dataConn,username,password);
                 pst = sqlConn.prepareCall("SELECT COUNT(*) FROM users,role where role_libelle='Medecin' and Role_id = rle_id");
                 rs = pst.executeQuery();
                 if (rs.next())
                         
                         {
                              nbre_total = rs.getString("COUNT(*)");
                       //   nombre.setText(nbre);
                         }
        } catch (Exception e) {
        }
        return nbre_total;
    }
   
     public String nbre_sec ()
    {
        String nbre_total = null;
     try {
            Class.forName("com.mysql.jdbc.Driver");
                 sqlConn = DriverManager.getConnection(dataConn,username,password);
                    pst = sqlConn.prepareCall("SELECT COUNT(*) FROM users,role where role_libelle='Secretaire' and Role_id = rle_id");
                    rs = pst.executeQuery();
                 if (rs.next())
                         
                         {
                              nbre_total = rs.getString("COUNT(*)");
                       //   nombre.setText(nbre);
                         }
        } catch (Exception e) {
        }
        return nbre_total;
    }
     
      public String nbre_inf ()
    {
        String nbre_total = null;
     try {
            Class.forName("com.mysql.jdbc.Driver");
                 sqlConn = DriverManager.getConnection(dataConn,username,password);
 pst = sqlConn.prepareCall("SELECT COUNT(*) FROM users,role where role_libelle='Infirmier' and Role_id = rle_id");
                 rs = pst.executeQuery();
                 if (rs.next())
                         
                         {
                              nbre_total = rs.getString("COUNT(*)");
                       //   nombre.setText(nbre);
                         }
        } catch (Exception e) {
        }
        return nbre_total;
    }
      
       public String nbre_cais ()
    {
        String nbre_total = null;
     try {
            Class.forName("com.mysql.jdbc.Driver");
                 sqlConn = DriverManager.getConnection(dataConn,username,password);
 pst = sqlConn.prepareCall("SELECT COUNT(*) FROM users,role where role_libelle='Caissier' and Role_id = rle_id");
                 rs = pst.executeQuery();
                 if (rs.next())
                         
                         {
                              nbre_total = rs.getString("COUNT(*)");
                       //   nombre.setText(nbre);
                         }
        } catch (Exception e) {
        }
        return nbre_total;
    }
    private void JTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTableMouseClicked
        // TODO add your handling code here:
      //  tab_all_patient();
        //tab_all_dermato();
        //tab_all_ohpto();
        //tab_all_cardio();
        //tab_all_general();
       // int row = JTable.getSelectedRow();
        
        // Obtenir la valeur de la premi√®re colonne dans la ligne s√©lectionn√©e
        //Object value = JTable.getValueAt(row, 0);
        
        // Faites quelque chose avec la valeur r√©cup√©r√©e, par exemple l'afficher dans la console
        //System.out.println("Valeur de la premi√®re colonne : " + value);
    }//GEN-LAST:event_JTableMouseClicked

    private void tabbedPaneCustom1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabbedPaneCustom1KeyPressed
        // TODO add your handling code here:
//        tab_all_patient();
      
    }//GEN-LAST:event_tabbedPaneCustom1KeyPressed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
          // tab_all_patient();
      
    }//GEN-LAST:event_formMouseClicked

    private void tabbedPaneCustom1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabbedPaneCustom1MouseClicked
        // TODO add your handling code here:
          // tab_all_patient();
       
    }//GEN-LAST:event_tabbedPaneCustom1MouseClicked

    private void textsearch1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textsearch1KeyReleased
        // TODO add your handling code here:
         if (textsearch1.getText().trim().isEmpty() || textsearch1.getText().equalsIgnoreCase("recherche")){
            String id = null;
            id = textsearch1.getText();
          
            
            DefaultTableModel model = (DefaultTableModel) JTable.getModel();
//            DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
//            DefaultTableModel model3 = (DefaultTableModel) jTable3.getModel();
//            DefaultTableModel model4 = (DefaultTableModel) jTable4.getModel();
//            DefaultTableModel model5 = (DefaultTableModel) jTable5.getModel();
            model.setRowCount(0);
//            model2.setRowCount(0);
//            model3.setRowCount(0);
//            model4.setRowCount(0);
//             model5.setRowCount(0);
            
            try {
                Class.forName("com.mysql.jdbc.Driver");
                sqlConn = DriverManager.getConnection(dataConn,username,password);
                pst_tab = sqlConn.prepareStatement("Select * from users,role,service where Service_id = id and Role_id= rle_id");
                rs_tab = pst_tab.executeQuery () ;
                while (rs_tab.next()) {
                    String column1Data = rs_tab.getString("nom");
                    String column2Data = rs_tab.getString("prenom");
                    String column3Data = rs_tab.getString("telephone");
                    String column4Data = rs_tab.getString("role_libelle");
                    String column5Data = rs_tab.getString("service_libelle");
                    String column6Data = rs_tab.getString("date");

                    // Ajouter d'autres colonnes si n√©cessaire

                    model.addRow(new Object[]{column1Data, column2Data, column3Data, column4Data, column5Data, column6Data});
//                    model2.addRow(new Object[]{column1Data, column2Data, column3Data, column4Data, column5Data, column6Data});
//                    model3.addRow(new Object[]{column1Data, column2Data, column3Data, column4Data, column5Data, column6Data});
//                    model4.addRow(new Object[]{column1Data, column2Data, column3Data, column4Data, column5Data, column6Data});
//                    model5.addRow(new Object[]{column1Data, column2Data, column3Data, column4Data, column5Data, column6Data});
               }
            }
            
            catch (ClassNotFoundException | SQLException e) {
            }

        }
        else{
            DefaultTableModel model = (DefaultTableModel) JTable.getModel();
//            DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
//            DefaultTableModel model3 = (DefaultTableModel) jTable3.getModel();
//            DefaultTableModel model4 = (DefaultTableModel) jTable4.getModel();
//            DefaultTableModel model5 = (DefaultTableModel) jTable5.getModel();
            model.setRowCount(0);
//            model2.setRowCount(0);
//            model3.setRowCount(0);
//            model4.setRowCount(0);
//             model5.setRowCount(0);
            try {
                Class.forName("com.mysql.jdbc.Driver");
                sqlConn = DriverManager.getConnection(dataConn,username,password);
                String sql = "SELECT * FROM users,service,role WHERE nom_users LIKE ? and Service_id = id and Role_id= rle_id";
                PreparedStatement statement = sqlConn.prepareStatement(sql);
                statement.setString(1, "%" + textsearch1.getText() + "%");
                ResultSet resultSet = statement.executeQuery();
                while (resultSet.next()) {
                   String column1Data = resultSet.getString("nom_users");
                    String column2Data = resultSet.getString("prenom_users");
                    String column3Data = resultSet.getString("telephone");
                    String column4Data = resultSet.getString("role_libelle");
                    String column5Data = resultSet.getString("service_libelle");
                    String column6Data = resultSet.getString("date");
                   

                    // Ajouter d'autres colonnes si n√©cessaire

                    model.addRow(new Object[]{column1Data, column2Data, column3Data, column4Data, column5Data,  column6Data});
//                    model2.addRow(new Object[]{column1Data, column2Data, column3Data, column4Data, column5Data, column6Data});
//                    model3.addRow(new Object[]{column1Data, column2Data, column3Data, column4Data, column5Data, column6Data});
//                    model4.addRow(new Object[]{column1Data, column2Data, column3Data, column4Data, column5Data, column6Data});
//                    model5.addRow(new Object[]{column1Data, column2Data, column3Data, column4Data, column5Data, column6Data});
                }
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_textsearch1KeyReleased

    private void textsearch1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textsearch1MouseClicked
        // TODO add your handling code here:
        textsearch1.setText("");
    }//GEN-LAST:event_textsearch1MouseClicked

    private void card1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_card1MouseClicked
        // TODO add your handling code here:
      //  tab_medecin("Medecin", JTable2);
    // tab_all_patient("Medecin",JTable);
        Form_Home_Caissier();
        tab_all_patient("Medecin",JTable);
//        tab_type_medecin("Medecin", "Cardiologie", jTable2);
//        tab_type_medecin("Medecin", "Ophtamologie", jTable4);
//        tab_type_medecin("Medecin", "Dermatologie", jTable3);
//        tab_type_medecin("Medecin", "General", jTable5);
            
    }//GEN-LAST:event_card1MouseClicked

    private void card2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_card2MouseClicked
        // TODO add your handling code here:
       // tab_medecin("Infirmier", JTable2);
        Form_Home_Caissier();
        tab_all_patient("Infirmier",JTable);
//        tab_type_medecin("Infirmier", "Cardiologie", jTable2);
//        tab_type_medecin("Infirmier", "Ophtamologie", jTable4);
//        tab_type_medecin("Infirmier", "Dermatologie", jTable3);
//        tab_type_medecin("Infirmier", "General", jTable5);
        
     //   JOptionPane.showMessageDialog(null, "hoo");
    }//GEN-LAST:event_card2MouseClicked

    private void card3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_card3MouseClicked
        // TODO add your handling code here:
         Form_Home_Caissier();
         tab_all_patient("Caissier",JTable);
          //DefaultTableModel model = (DefaultTableModel) JTable.getModel();
//            DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
//            DefaultTableModel model3 = (DefaultTableModel) jTable3.getModel();
//            DefaultTableModel model4 = (DefaultTableModel) jTable4.getModel();
//            DefaultTableModel model5 = (DefaultTableModel) jTable5.getModel();
            //model.setRowCount(0);
//            model2.setRowCount(0);
//            model3.setRowCount(0);
//            model4.setRowCount(0);
//             model5.setRowCount(0);
       
    }//GEN-LAST:event_card3MouseClicked

    private void card4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_card4MouseClicked
        // TODO add your handling code here:
         Form_Home_Caissier();
       tab_all_patient("Secretaire",JTable);
//        tab_type_medecin("Secretaire", "Cardiologie", jTable2);
  //      tab_type_medecin("Secretaire", "Ophtamologie", jTable4);
  //      tab_type_medecin("Secretaire", "Dermatologie", jTable3);
  //      tab_type_medecin("Secretaire", "General", jTable5);
    }//GEN-LAST:event_card4MouseClicked

    public void date()
    {
    Date d = new Date();
    SimpleDateFormat dat = new SimpleDateFormat("EEEE-dd-MMM-yyyy");
    
    }
     
     
     public void paiement(String nom , String prenom ,String id)
     {
         Date d = new Date();
             java.sql.Date ladate = new java.sql.Date(d.getTime());
                String montant = "5000"; 
         try {
             Class.forName("com.mysql.jdbc.Driver");
                sqlConn = DriverManager.getConnection(dataConn,username,password);
                pst_search = sqlConn.prepareStatement("insert into factureconsultation(id_consultation,nom,prenoms,prix,date) value(?,?,?,?,?)");
                //pst_search = sqlConn.prepareCall("Select * from consultation,factureconsultation where nomPatient=? and prenomPatient=? and date_consultation=? and etat='Non Payer' and factureconsultation.id_consultation=consultation.idConsultation");
                pst_search.setString(1, id);
                pst_search.setString(2, nom);
                pst_search.setString(3, prenom);
                pst_search.setString(4, montant);
                pst_search.setDate(4, ladate);
                pst_search.executeUpdate();
         } catch (Exception e) {
         }
     
     }
      public void tab_all_patient (String role,JTable JTable2)
    {
         try {
          Class.forName("com.mysql.jdbc.Driver");
    sqlConn = DriverManager.getConnection(dataConn,username,password);
    pst_tab = sqlConn.prepareStatement("Select * from users,role,service where role_libelle= ? and Role_id=rle_id and Service_id=id");
    pst_tab.setString(1, role);
    rs_tab = pst_tab.executeQuery () ;
    ResultSetMetaData stData = rs_tab.getMetaData () ;
    q = stData. getColumnCount () ;
    DefaultTableModel RecordTable = (DefaultTableModel)JTable2.getModel();
    RecordTable.setRowCount(0);
     while(rs_tab.next()){
     Vector columnData= new Vector();
        for (i=1; i<=q ; i++){
            columnData.add(rs_tab.getString("nom_users"));
            columnData.add(rs_tab.getString("prenom_users"));
            columnData.add(rs_tab.getString("telephone"));
            columnData.add( rs_tab.getString("role_libelle"));
            columnData.add(rs_tab.getString("service_libelle"));   
             columnData.add(rs_tab.getString("date"));   
     }
        RecordTable.addRow(columnData);
     }
        } catch (Exception e) {
        }
    }
       public void tab_type_medecin (String role,String service,JTable JTable2)
    {
         try {
          Class.forName("com.mysql.jdbc.Driver");
    sqlConn = DriverManager.getConnection(dataConn,username,password);
    pst_tab = sqlConn.prepareStatement("Select * from users,role,service where role_libelle=? and service_libelle = ? and Role_id=rle_id and Service_id=id");
    pst_tab.setString(1, role);
    pst_tab.setString(2, service);
    rs_tab = pst_tab.executeQuery () ;
    ResultSetMetaData stData = rs_tab.getMetaData () ;
    q = stData. getColumnCount () ;
    DefaultTableModel RecordTable = (DefaultTableModel)JTable2.getModel();
    RecordTable.setRowCount(0);
     while(rs_tab.next()){
     Vector columnData= new Vector();
        for (i=1; i<=q ; i++){
            columnData.add(rs_tab.getString("nom_users"));
            columnData.add(rs_tab.getString("prenom_users"));
            columnData.add(rs_tab.getString("telephone"));
            columnData.add( rs_tab.getString("role_libelle"));
            columnData.add(rs_tab.getString("service_libelle"));   
             columnData.add(rs_tab.getString("date"));   
     }
        RecordTable.addRow(columnData);
     }
        } catch (Exception e) {
        }
    }
     

      
       
     
        
      
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTable;
    private com.raven.swing.PanelBorder all_patient;
    private com.raven.component.Card card1;
    private com.raven.component.Card card2;
    private com.raven.component.Card card3;
    private com.raven.component.Card card4;
    private javax.swing.JScrollPane jScrollPanel_all;
    private raven.tabbed.TabbedPaneCustom tabbedPaneCustom1;
    private textfield.textsearch textsearch1;
    // End of variables declaration//GEN-END:variables
}
