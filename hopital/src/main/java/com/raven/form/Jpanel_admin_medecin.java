/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.raven.form;

import static com.raven.form.Form_enregistrement.showPopup;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javaswingdev.swing.ButtonCustom1;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import sample.message.Message;

/**
 *
 * @author Trafiquant de Tigb√©
 */
public class Jpanel_admin_medecin extends javax.swing.JPanel {
 private static final String username = "root";
 private static final String password = "primatologue";
 private static final String dataConn = "jdbc:mysql://localhost:3306/hopital";
 
 Connection sqlConn = null;
 Connection sqlSearch = null;
 PreparedStatement pst = null;
 PreparedStatement pst_search = null;
 PreparedStatement pst_num = null;
 ResultSet rs = null;
 ResultSet rs_2 = null;
 ResultSet rs_3 = null;
 PreparedStatement pst_tab = null;
 ResultSet rs_tab = null;
 int q, i , id, deleteItem;
  Message obj = new Message();

    /**
     * Creates new form Jpanel_admin_Medecin
     */
    public Jpanel_admin_medecin() {
        initComponents();
        setOpaque(false);
        date();
        combo_poste();
        comboservice();
        combo_specialisation();
        poste.setEditable(false);
        specialisation.setEditable(false);
        service.setEditable(false);
        ButtonCustom1 bt = new ButtonCustom1();
        bt.custom(jButton1);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBorder2 = new com.raven.swing.PanelBorder();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ldate = new javax.swing.JLabel();
        specialisation = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        service = new javax.swing.JComboBox<>();
        nom = new textfield.TextField();
        numero = new textfield.TextField();
        prenom = new textfield.TextField();
        jLabel9 = new javax.swing.JLabel();
        poste = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();

        panelBorder2.setBackground(new java.awt.Color(38, 120, 113));

        jLabel7.setBackground(new java.awt.Color(25, 110, 129));
        jLabel7.setFont(new java.awt.Font("Cambria", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(25, 110, 129));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Ajout du personnel");

        jLabel4.setBackground(new java.awt.Color(234, 233, 233));
        jLabel4.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Nom");

        jLabel2.setBackground(new java.awt.Color(234, 233, 233));
        jLabel2.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Prenoms");

        jLabel3.setBackground(new java.awt.Color(234, 233, 233));
        jLabel3.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Telephone");

        jButton1.setBackground(new java.awt.Color(242, 242, 242));
        jButton1.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(38, 120, 113));
        jButton1.setText("Enregistrer");
        jButton1.setBorder(null);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(234, 233, 233));
        jLabel5.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Specialisation");

        jLabel6.setBackground(new java.awt.Color(234, 233, 233));
        jLabel6.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Date");

        ldate.setBackground(new java.awt.Color(0, 102, 102));
        ldate.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        ldate.setForeground(new java.awt.Color(255, 255, 255));
        ldate.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        specialisation.setEditable(true);
        specialisation.setFont(new java.awt.Font("Cambria", 1, 17)); // NOI18N
        specialisation.setForeground(new java.awt.Color(1, 74, 124));
        specialisation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specialisationActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(234, 233, 233));
        jLabel8.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("Service");

        service.setEditable(true);
        service.setFont(new java.awt.Font("Cambria", 1, 17)); // NOI18N
        service.setForeground(new java.awt.Color(1, 74, 124));
        service.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serviceActionPerformed(evt);
            }
        });

        nom.setLabelText("Nom");
        nom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomActionPerformed(evt);
            }
        });
        nom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nomKeyTyped(evt);
            }
        });

        numero.setLabelText("Numero de telephone : 97388523");
        numero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroActionPerformed(evt);
            }
        });
        numero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numeroKeyTyped(evt);
            }
        });

        prenom.setLabelText("Prenom");
        prenom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                prenomKeyTyped(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(234, 233, 233));
        jLabel9.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Poste");

        poste.setEditable(true);
        poste.setFont(new java.awt.Font("Cambria", 1, 17)); // NOI18N
        poste.setForeground(new java.awt.Color(1, 74, 124));
        poste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                posteActionPerformed(evt);
            }
        });
        poste.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                posteKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout panelBorder2Layout = new javax.swing.GroupLayout(panelBorder2);
        panelBorder2.setLayout(panelBorder2Layout);
        panelBorder2Layout.setHorizontalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(15, 15, 15)
                        .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numero, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nom, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(prenom, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(32, 32, 32)
                        .addComponent(specialisation, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(service, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder2Layout.createSequentialGroup()
                        .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder2Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(panelBorder2Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)))
                        .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ldate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(poste, 0, 277, Short.MAX_VALUE))))
                .addGap(80, 80, 80))
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(415, 415, 415))
        );
        panelBorder2Layout.setVerticalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ldate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(poste, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(specialisation, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(service, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(prenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(37, 37, 37)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int taille_nom = nom.getText().length();
        int taille_prenom = prenom.getText().length();
        int taille_numero = numero.getText().length();
        String id_poste = id_poste();
        String id_service;
        String id_specialite ;
        

        Date d = new Date();
         SimpleDateFormat dat = new SimpleDateFormat("dd-MM-yyyy");
        String ladate = dat.format(d);
       // java.sql.Date ladate = new java.sql.Date(d.getTime());
        String specialite = specialisation.getSelectedItem().toString();
        String service = this.service.getSelectedItem().toString();
        String role = poste.getSelectedItem().toString();


        String id = identifiant (nom.getText(),prenom.getText(),poste.getSelectedItem().toString(),numero.getText());
        String mdp = password (nom.getText(),prenom.getText(),poste.getSelectedItem().toString(),numero.getText());
        
       if(role.equals("Secretaire"))
       {
           id_specialite = null;
           id_service = id_service();
       
       }
       else if(role.equals("Infirmier"))
       {
           id_specialite = null;
           id_service = id_service();
       
       }
       else if(role.equals("Caissier"))
       {
           id_specialite = null;
           id_service = "5";
       
       }
       else
       {
           id_specialite = id_specialite();
           id_service = id_service();
       } 
        if(numero.getText().equals("") || nom.getText().equals("") || numero.getText().equals(""))
        {
            getToolkit().beep();
            
             JOptionPane.showMessageDialog(null, "Veillez remplir tous les champ d'information \n"
                + "Enregistrement Echou√©");
            
        }

        else if (taille_nom == 1)
        {
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "Nom Invalide");
        }

        else if (taille_prenom == 1)
        {
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "Preoms Invalide");
        }
        else if (taille_numero < 8)
        {
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "Numero Invalide");
        }

        else
        {

            try {

                Class.forName("com.mysql.jdbc.Driver");
                sqlConn = DriverManager.getConnection(dataConn,username,password);
                
                pst_search = sqlConn.prepareCall("Select * from users where nom_users=? and prenom_users=?");
                pst_search.setString(1, nom.getText());
                pst_search.setString(2, prenom.getText());
                rs_2 = pst_search.executeQuery();
                
                pst_num = sqlConn.prepareCall("Select * from users where telephone=? ");
                pst_num.setString(1, numero.getText());
                rs_3 = pst_num.executeQuery();
                if(rs_2.next())
                {
                    getToolkit().beep();
                    
                    //JOptionPane.showMessageDialog(null, nom.getText()+" "+prenom.getText()+" est d√©ja enregistr√©");
                }
                else if(rs_3.next())
                {
                    getToolkit().beep();
                    
                    JOptionPane.showMessageDialog(null,numero.getText()+"est d√©ja enregistr√©");
                }
                else
                {

                    pst = sqlConn.prepareStatement("insert into users(Role_id,Service_id,Specialite_id,nom_users,prenom_users,telephone,date,identifiant,mdp) value(?,?,?,?,?,?,?,?,?)");
                    pst.setString(1, id_poste);
                    pst.setString(2, id_service);
                     pst.setString(3, id_specialite);
                    pst.setString(4, nom.getText().toUpperCase());
                    pst.setString(5, prenom.getText());
                    pst.setString(6, numero.getText());
                    pst.setString(7, ladate);
                    pst.setString(8, id);
                    pst.setString(9, mdp);
                    pst.executeUpdate();
                     obj.message.setText("Enr√©gistrement √©ffectu√© avec succ√®s \n"
                            + " Veillez noter ces informations \n"
                            + " Identifiant: "+ id +" \n"
                            + " Mot de passe: "+ mdp +" \n"
                            + " Pour "
                            + " "+ poste.getSelectedItem().toString()+" "+nom.getText()+" "+prenom.getText());
             showPopup(obj);
              nom.setText(" ");
              prenom.setText(" ");
              numero.setText(" ");
              Form_dash_admin fd =new Form_dash_admin();
              fd. Form_Home_Caissier();
       }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Jpanel_admin_medecin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Jpanel_admin_medecin.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseClicked

    private void specialisationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specialisationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_specialisationActionPerformed

    private void serviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serviceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serviceActionPerformed

    private void nomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomKeyTyped
        // TODO add your handling code here:
          char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) || (c == KeyEvent.VK_SPACE) || c == KeyEvent.VK_DELETE ))
        {
            getToolkit().beep();
            evt.consume();
            //JOptionPane.showMessageDialog(null, "Saisir uniquement que le prenom");
        }
    }//GEN-LAST:event_nomKeyTyped

    private void numeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE)|| c== KeyEvent.VK_DELETE))
        {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Saisir uniquement que le numero de telephone");
        }
    }//GEN-LAST:event_numeroKeyTyped

    private void prenomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prenomKeyTyped
        // TODO add your handling code here:
         char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) || (c == KeyEvent.VK_SPACE) || c == KeyEvent.VK_DELETE ))
        {
            getToolkit().beep();
            evt.consume();
            //JOptionPane.showMessageDialog(null, "Saisir uniquement que le prenom");
        }
    }//GEN-LAST:event_prenomKeyTyped

    private void posteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_posteActionPerformed
        // TODO add your handling code here:
         String role = poste.getSelectedItem().toString();
         if(role.equals("Secretaire"))
         {
             specialisation.setEnabled(false);
             service.setEnabled(true);
             
         } 
         else if(role.equals("Infirmier"))
         {
             specialisation.setEnabled(false);
                service.setEnabled(true);

         } 
         else  if(role.equals("Caissier"))
         {
             specialisation.setEnabled(false);
             service.setEnabled(false);
             
         } 
         else  if(role.equals("Medecin"))
         {

             specialisation.setEnabled(true);
             service.setEnabled(true);
             
         } 
    }//GEN-LAST:event_posteActionPerformed

    private void nomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomActionPerformed

    private void numeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroActionPerformed

    private void posteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_posteKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_posteKeyPressed

    public void date()
    {
    Date d = new Date();
    SimpleDateFormat dat = new SimpleDateFormat("EEEE-dd-MMM-yyyy");
    ldate.setText(dat.format(d));
    }
     
     
     private String identifiant (String nom,String prenom,String poste,String number )
    {
     //Random random = new Random();  
     StringBuilder id = new StringBuilder();
     id.append(poste.toUpperCase().charAt(0));
     id.append(poste.charAt(1));
     id.append(poste.charAt(2));
     id.append(nom.toUpperCase().charAt(0));
     id.append(nom.charAt(1));
     id.append(prenom.charAt(0));
     id.append(prenom.charAt(1));
     id.append(number.charAt(0));
     id.append(number.charAt(1));
     
     return id.toString();
    } 
     
      private String password (String nom,String prenom,String poste ,String number)
    {
    // Random random = new Random();
     StringBuilder mdp = new StringBuilder();
     mdp.append(poste.toUpperCase().charAt(0));
     mdp.append(poste.charAt(1));
     mdp.append(poste.charAt(2));
     mdp.append(nom.toUpperCase().charAt(0));
     mdp.append(prenom.toUpperCase().charAt(0));
     mdp.append(number.charAt(0));
     mdp.append(number.charAt(1));
     return mdp.toString();
    }
      
     public void combo_poste ()
     {
         try {
              Class.forName("com.mysql.jdbc.Driver");
                sqlConn = DriverManager.getConnection(dataConn,username,password);
                pst = sqlConn.prepareCall("Select * from role where role_libelle != 'Admin' ");
                 rs = pst.executeQuery();
                 while(rs.next())
                 {
                 poste.addItem(rs.getString("role_libelle"));
                 }
         } catch (ClassNotFoundException | SQLException e) {
         }
     }
     
   
     public void combo_specialisation ()
     {
         try {
              Class.forName("com.mysql.jdbc.Driver");
                sqlConn = DriverManager.getConnection(dataConn,username,password);
                pst = sqlConn.prepareCall("Select * from specialite where specialite_libelle != 'Caisse' and specialite_libelle != 'Admin' ");
                 rs = pst.executeQuery();
                 while(rs.next())
                 {
                 specialisation.addItem(rs.getString("specialite_libelle"));
                 }
         } catch (ClassNotFoundException | SQLException e) {
         }
     }
     
     public String id_poste ()
     {
         String pos = poste.getSelectedItem().toString();
         String id_poste = null ;
         try {
              Class.forName("com.mysql.jdbc.Driver");
                sqlConn = DriverManager.getConnection(dataConn,username,password);
                pst = sqlConn.prepareCall("Select * from role where role_libelle = ? ");
                    pst.setString(1, pos);
                
                  rs = pst.executeQuery();
                 if (rs.next()){
                      id_poste = rs.getString("rle_id");
                 }
                  
         } catch (ClassNotFoundException | SQLException e) {
         }
        
     return id_poste; 
     }
     
    
 
     public void comboservice ()
     {
         try {
              Class.forName("com.mysql.jdbc.Driver");
                sqlConn = DriverManager.getConnection(dataConn,username,password);
                pst = sqlConn.prepareCall("Select * from service where service_libelle != 'Caisse' and service_libelle != 'Admin'");
                 rs = pst.executeQuery();
                 while(rs.next())
                 {
                  service.addItem(rs.getString("service_libelle"));
                 }
         } catch (ClassNotFoundException | SQLException e) {
         }
     }
     
     public String id_service ()
     {
         String ser = service.getSelectedItem().toString();
         
         String id_service = null ;
         try {
              Class.forName("com.mysql.jdbc.Driver");
                sqlConn = DriverManager.getConnection(dataConn,username,password);
                pst = sqlConn.prepareCall("Select * from service where service_libelle=?");
                    pst.setString(1, ser);
                  rs = pst.executeQuery();
                 if(rs.next())
                 {
                  id_service = rs.getString("id");
                 }
         } catch (ClassNotFoundException | SQLException e) {
         }
        
     return id_service; 
     }
     
     public String id_specialite ()
     {
         String pos = specialisation.getSelectedItem().toString();
         String id_specialite = null ;
         try {
              Class.forName("com.mysql.jdbc.Driver");
                sqlConn = DriverManager.getConnection(dataConn,username,password);
                pst = sqlConn.prepareCall("Select * from specialite where specialite_libelle = ? ");
                    pst.setString(1, pos);
                
                  rs = pst.executeQuery();
                 if (rs.next()){
                      id_specialite = rs.getString("id_specialite");
                 }
                  
         } catch (ClassNotFoundException | SQLException e) {
         }
        
     return id_specialite; 
     }
     
     public static void showPopup(JPanel panel) {
     JDialog dialog = new JDialog();
    dialog.setUndecorated(true); // Supprimer les bordures de la fen√™tre
    dialog.getContentPane().add(panel);
    
    dialog.pack();
    dialog.setLocationRelativeTo(null); // Centrer la fen√™tre sur l'√©cran
    
    dialog.setVisible(true);
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel ldate;
    private textfield.TextField nom;
    private textfield.TextField numero;
    private com.raven.swing.PanelBorder panelBorder2;
    private javax.swing.JComboBox<String> poste;
    private textfield.TextField prenom;
    private javax.swing.JComboBox<String> service;
    private javax.swing.JComboBox<String> specialisation;
    // End of variables declaration//GEN-END:variables
}
